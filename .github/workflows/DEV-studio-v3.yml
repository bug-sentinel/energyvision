name: DEV - Build & deploy studio v3
on:
  workflow_dispatch:
  push:
    branches:
      - staging
    paths:
      - 'sanityv3/**/*'
      - './FeatureFlags.js'
      - '!./README.md'
      - '!./.env.development.template'
permissions:
  id-token: write
  packages: write
jobs:
  check-code:
    runs-on: ubuntu-latest
    env:
      SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
    steps:
      - name: Checkout üõéÔ∏è
        uses: actions/checkout@v3
        with:
          ref: staging
      - name: Install pnpm üì¶
        id: install-pnpm
        uses: pnpm/action-setup@v2.2.4
        with:
          version: '8.5.1'
      - name: Cache pnpm modules üíæ
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'pnpm'
      - name: Install dependencies üîß
        id: install-dependencies
        run: |
          pnpm install
          pnpm sanityv3 install
      # @TODO: Enable ESlint for v3
      # - name: Run ESLint üîé
      #   id: lint
      #   run: |
      #     pnpm lint:studio
      - uses: act10ns/slack@v1
        with:
          status: ${{ job.status }}
          steps: ${{ toJson(steps) }}
        if: failure()

  deploy-studio:
    needs: check-code
    runs-on: ubuntu-latest
    environment:
      name: development
      url: https://studiov3-global-development-energyvision-dev.radix.equinor.com/
    strategy:
      matrix:
        dataset: [global-development]
    env:
      SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
      DOCKER_BUILDKIT: 1
    steps:
      - name: Checkout üõéÔ∏è
        uses: actions/checkout@v3
      - id: deploy-satellite
        uses: ./.github/workflows/deploy-v3/
        with:
          imageName: ghcr.io/equinor/energyvision/studiov3-${{ matrix.dataset }}
          datasetName: ${{ matrix.dataset }}
          githubToken: ${{ secrets.GITHUB_TOKEN }}
          sanityApiToken: ${{ secrets.SANITY_API_TOKEN }}
          sanityMutationToken: ${{ secrets.SANITY_STUDIO_MUTATION_TOKEN }}
          sanityPreviewToken: ${{ secrets.SANITY_STUDIO_PREVIEW_SECRET }}
          brandmasterUrl: ${{ secrets.SANITY_STUDIO_BRANDMASTER_URL }}
          brandmasterPluginSource: ${{ secrets.SANITY_STUDIO_BRANDMASTER_PLUGIN_SOURCE }}
          fotowareClientId: ${{ secrets.SANITY_STUDIO_FOTOWARE_CLIENT_ID }}
          fotowareTenantUrl: ${{ secrets.SANITY_STUDIO_FOTOWARE_TENANT_URL }}
          fotowareRedirectOrigin: ${{ secrets.SANITY_STUDIO_FOTOWARE_REDIRECT_ORIGIN }}
          fotowareAfExportUrl: ${{ secrets.SANITY_STUDIO_FOTOWARE_AF_EXPORT_URL }}
          fotowareAfExportKey: ${{ secrets.SANITY_STUDIO_FOTOWARE_AF_EXPORT_KEY }}
          screen9accountId: ${{ secrets.SANITY_STUDIO_SCREEN9_ACCOUNT_ID }}
          screen9token: ${{ secrets.SANITY_STUDIO_SCREEN9_TOKEN }}
          environment: ${{ secrets.ENV }}
      - uses: act10ns/slack@v1
        with:
          status: ${{ job.status }}
          steps: ${{ toJson(steps) }}
        if: failure()

  store-image-tags:
    needs:  deploy-studio
    runs-on: ubuntu-latest
    steps:
      - name: Checkout internal üõéÔ∏è
        id: checkout-internal
        uses: actions/checkout@v3
        with:
          repository: 'equinor/energyvision-internal'
          ref: main
          token: ${{ secrets.PAT }}
      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '14'  # Or any version you prefer

      - name: Install dependencies
        run: |
          npm install js-yaml

      - name: Run script for 'studio'
        run: node storeImageTags.js studio
      - name: Commit and push changes
        run: |
          git config --global user.email 'nilsml@users.noreply.github.com'
          git remote set-url origin https://x-access-token:${{ secrets.PAT }}@github.com/equinor/energyvision-internal
          git add latest-prod-tags.json
          git commit -m "Update latest-prod-tags.json with new tags" || echo "No changes to commit"
          git push